name: Publish

on:
  push:
    branches:
      - "eduTools"

jobs:
  release_assets:
    name: Release assets
    runs-on: ${{ matrix.config.os }} # we run many different builds
    strategy:
      # just an example matrix
      matrix:
        config:
           - os: ubuntu-18.04
             asset_path: deploy/Jamulus_latest_amd64.deb
             asset_name: jamulus_latest_ubuntu_amd64.deb
           - os: macos-10.15
             asset_path: deploy/*.dmg
             asset_name: jamulus_latest_mac.dmg
           - os: windows-latest
             asset_path: deploy\*.exe
             asset_name: jamulus_latest_win.exe
    steps:
      # checkout of cource
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare Release
        if: matrix.config.os == 'ubuntu-18.04'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: r-${{ github.sha }}
          release_name: Test release ${{ github.sha }}
          body: |
            Changes in this Release: DEV release. No changelog
          draft: false
          prerelease: true
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        if: matrix.config.os == 'windows-latest'
        with:
          version: '5.15.2'
          dir: '${{ github.workspace }}'
          arch: 'win64_msvc2019_64'
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        if: matrix.config.os == 'windows-latest'
        with:
          version: '5.15.2'
          dir: '${{ github.workspace }}'
          arch: 'win32_msvc2019'
      - name: "Build (linux)"
        run: cd distributions; sudo ./build-debian-package-auto.sh
        if: matrix.config.os == 'ubuntu-18.04'
      - name: "Build (Windows)"
        run: powershell .\windows\deploy_windows.ps1 ${{ github.workspace }}\Qt\5.15.2\
        if: matrix.config.os == 'windows-latest'
      - name: "Build (macOS)"
        run: brew install qt5; brew link qt5 --force; sh mac/deploy_mac.sh;
        if: matrix.config.os == 'macos-10.15'
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ matrix.config.asset_path }}
          asset_name: ${{ matrix.config.asset_name }}
          asset_content_type: application/octet-stream
